Blog-F16-APIs

The API exercise marked a steep learning curve, but an attempt that was ultimately successful. There were many instances of troubleshooting required and I have tried to mark them below.

Difficulties today have included locating the 'environment variables' in the control panel of Windows 10. This has been solved but the instructions were confusing. My problems were primarily from my unfamiliarity with my relatively new Windows 10 system.

I also ran into some trouble with the downloaded zip files. Again, these derive from a lack of familiarity with Windows 10 and the 7Zip software. 

I was successful with getting Git Bash up and running without too many difficulties. The following is a play-by-play account of some of the difficulties I encountered and the way I was able to remedy difficulties.

I have figured out how to navigate through different folders. My most recent struggle has been with making changes to the Canadiana file using my text editor. I have everything open but I am uncertain about what to do when the instructions say "Do you see how you can do that?" At the moment, I do not... unless I merely have to change the url address we tinkered with earlier to isolate Ottawa from 1800-1900 in addition to retrieving the individual records. Ok that seemed to save ok and work resonably well but I am still having trouble with retriving the full text result in GitBash. It is telling me that "line 38: wget: command not found". That leads me to think that I may have downloaded wget improperly. I realized that I had downloaded it but had not yet put it in the Windows Directory. I vaguely remember how I did so in an earlier exercise and attempted to recreate that process. After some searching, I relocated my Windows32 screen (that was way harder than it should have been). I ran my program again and... it failed as "no URLs found in urlstograb.txt. Not knowing what this meant, I turned to the internet. I returned to my Text Editor and realied I may have been required to edit a second line of url. Perhaps this will work this time? After a few more trials, I have taken another step toward my target. Unfortunately, however, Bash is still having problems reading lines 14 and 25. It seems to be having trouble with 'jq' - allow me to investigate! Eureka! It worked! I needed to add ./ in front of the jq. After a very complex problem-by-problem investgation into my problem, I have fixed it. As I type this, Bash is doing its thing and I am quite curious to see the result. I understand there is one last step for me to complete but allow me to revel in my glory for one moment... Ok back to the exercise. (Note: don't forget to upload my successful script to my repository.) It certainly is challenging to figure out how to split my output. I have successfully run the splitthingsup script and created a ridiculous number of files. I have tried to put them in a separate folder but am waiting for the machine to respond. The need for a better script for splitting the text is evident to me. I tried the code given by Lee Mordechai which produced roughly 45 files for me <awk '/identifier/{"F"++i;}{print > "newoutput"i".txt";}' output.txt>. 

I feel like I am starting to understand how the data can be manipulated. That being said, it would take a lot of careful research for me to better understand  a) how these codes are created, and b) how to know what is a useful division of the text. Unfortunately, I am not currently in a position to do either at this time. These questions will be kept present in my mind as I hope to continue to build on these skills so I can more confidently apply them when needed.